openapi: 3.0.0
info:
  title: Jobs API
  contact: {}
  version: '1.0'
servers:
- url: https://herokutestingtime.herokuapp.com/api/v1
  variables: {}
paths:
  /jobs:
    get:
      tags:
      - Jobs
      summary: Get Jobs
      operationId: GetJobs
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    post:
      tags:
      - Jobs
      summary: Create Job
      operationId: CreateJob
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJobRequest'
            example:
              company: Deltarune
              position: Toby Fox
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /jobs/{id}:
    patch:
      tags:
      - Jobs
      summary: Update Job
      operationId: UpdateJob
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 618c6ee5354c363fc3280132
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobRequest'
            example:
              company: Stardew Valley
              position: ConcernedApe
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    delete:
      tags:
      - Jobs
      summary: Delete Job
      operationId: DeleteJob
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 'null'
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
    get:
      tags:
      - Jobs
      summary: Get Job
      operationId: GetJob
      parameters:
      - name: id
        in: path
        description: ''
        required: true
        style: simple
        schema:
          type: string
          example: 'null'
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
  /auth/register:
    post:
      tags:
      - Auth
      summary: Register User
      operationId: RegisterUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserRequest'
            example:
              name: Kris
              email: NotInControl@gmail.com
              password: Deltarune
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
      - Auth
      summary: login
      operationId: login
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginrequest'
            example:
              email: NotInControl@gmail.com
              password: Deltarune
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
components:
  schemas:
    CreateJobRequest:
      title: CreateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Deltarune
        position: Toby Fox
    UpdateJobRequest:
      title: UpdateJobRequest
      required:
      - company
      - position
      type: object
      properties:
        company:
          type: string
        position:
          type: string
      example:
        company: Stardew Valley
        position: ConcernedApe
    RegisterUserRequest:
      title: RegisterUserRequest
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        name: Kris
        email: NotInControl@gmail.com
        password: Deltarune
    loginrequest:
      title: loginrequest
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: NotInControl@gmail.com
        password: Deltarune
  securitySchemes:
    httpBearer:
      type: http
      scheme: bearer
security:
- httpBearer: []
tags:
- name: Jobs
  description: 'Jobs that can be added, removed updated and grabbed'
- name: Auth
  description: 'Login methods and ways to get login'